/*
**************************************************
CICLO 2 - RETO 4
CARLOS EDUARDO SANCHEZ GUEVARA
GRUPO 69
Ago 15, 2021
**************************************************
*/

/*
 * Pueda usar esta plantilla para la carga del reto a iMaster
 * Copie las clases de los paquetes Modelo, Vista, Controlador y Util
 * No incluya los import de los archivos .java solo las clases
*/

// Importaciones necesarias en iMaster
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.ArrayList;


// **************************************************
// Util (No modificar)
// **************************************************

class JDBCUtilities {
    private static final String DATABASE_LOCATION = "ProyectosConstruccion.db";

    public static Connection getConnection() throws SQLException {
        String url = "jdbc:sqlite:"+DATABASE_LOCATION;

        return DriverManager.getConnection(url);
    }
}

// Remplace en adelante por las clases de sus archivos .java


// **************************************************
// Vista
// class VistaRequerimientos {}
// **************************************************

public class ViewRequerimientos {

    public static final ControllerRequerimientos controlador = new ControllerRequerimientos();

    public static void requerimiento1() {
        try {
            ArrayList<Requerimiento_1> listarRequerimiento_1;

            listarRequerimiento_1 = controlador.consultaRequerimiento1();

            for (Requerimiento_1 rq : listarRequerimiento_1) {
                System.out.println(
                        rq.getFechaCompra() + " "
                        + rq.getCodCompra() + " "
                        + rq.getNombreProveedor() + " "
                        + rq.getPagado()
                );
            }

        } catch (SQLException e) {
            System.err.println(e);
        }
    }

    public static void requerimiento2() {
        try {
            ArrayList<Requerimiento_2> listaRequerimiento_2;

            listaRequerimiento_2 = controlador.consultaRequerimiento2();

            for (Requerimiento_2 r : listaRequerimiento_2) {
                System.out.println(
                        r.getFecIni() + " "
                        + r.getNombreCiudad() + " "
                        + r.getNomConstructora() + " "
                        + r.getNombreLider() + " "
                        + r.getCodigoTipo() + " "
                        + r.getEstrato()
                );
            }

        } catch (SQLException e) {
            System.err.println(e);
        }
    }

    public static void requerimiento3() {
        try {
            ArrayList<Requerimiento_3> listaRequerimiento_3;

            listaRequerimiento_3 = controlador.consultaRequerimiento3();

            for (Requerimiento_3 r : listaRequerimiento_3) {
                System.out.println(
                        r.getAbrev()
                );
            }

        } catch (SQLException e) {
            System.err.println(e);
        }
    }

}

// **************************************************
// Controlador
// class ControladorRequerimientos {}
// **************************************************

public class ControllerRequerimientos {

    private final RequerimientoDao_1 requerimientoDao_1 = new RequerimientoDao_1();
    private final RequerimientoDao_2 requerimientoDao_2 = new RequerimientoDao_2();
    private final RequerimientoDao_3 requerimientoDao_3 = new RequerimientoDao_3();
    
    public ArrayList<Requerimiento_1> consultaRequerimiento1() throws SQLException {
        return this.requerimientoDao_1.requerimiento1();
    }
    
    public ArrayList<Requerimiento_2> consultaRequerimiento2() throws SQLException {
        return this.requerimientoDao_2.requerimiento2();
    }
    
    public ArrayList<Requerimiento_3> consultaRequerimiento3() throws SQLException {
        return this.requerimientoDao_3.requerimiento3();
    }
      
}

// **************************************************
// Modelo
// VO
// class Requerimiento_1 {}
// **************************************************

public class Requerimiento_1 {

    // Atributos
    private String fechaCompra;
    private Integer codCompra;
    private String nombreProveedor;
    private String pagado;

    // Constructores
    public Requerimiento_1() {
    }

    public Requerimiento_1(String fechaCompra, Integer codCompra, String nombreProveedor, String pagado) {
        this.setFechaCompra(fechaCompra);
        this.setCodCompra(codCompra);
        this.setNombreProveedor(nombreProveedor);
        this.setPagado(pagado);
    }

    // Generamos los getters y setters
    public String getFechaCompra() {
        return fechaCompra;
    }
    public void setFechaCompra(String fechaCompra) {
        this.fechaCompra = fechaCompra;
    }
    public Integer getCodCompra() {
        return codCompra;
    }
    public void setCodCompra(Integer codCompra) {
        this.codCompra = codCompra;
    }
    public String getNombreProveedor() {
        return nombreProveedor;
    }
    public void setNombreProveedor(String nombreProveedor) {
        this.nombreProveedor = nombreProveedor;
    }
    public String getPagado() {
        return pagado;
    }
    public void setPagado(String pagado) {
        this.pagado = pagado;
    }

}

// **************************************************
// class Requerimiento_2 {}
// **************************************************

public class Requerimiento_2 {

    // Atributos
    private String fecIni;
    private String nombreCiudad;
    private String nomConstructora;
    private String nombreLider;
    private Integer codigoTipo;
    private Integer estrato;

    // Constructores
    public Requerimiento_2(){
    }

    public Requerimiento_2(String fecIni, String nombreCiudad, String nomConstructora, String nombreLider, 
                           Integer codigoTipo, Integer estrato){
        this.setFecIni(fecIni);
        this.setNombreCiudad(nombreCiudad);
        this.setNomConstructora(nomConstructora);
        this.setNombreLider(nombreLider);
        this.setCodigoTipo(codigoTipo);
        this.setEstrato(estrato);
    }

    // Generamos los getters y setters
    public String getFecIni() {
        return fecIni;
    }
    public void setFecIni(String fecIni) {
        this.fecIni = fecIni;
    }
    public String getNombreCiudad() {
        return nombreCiudad;
    }
    public void setNombreCiudad(String nombreCiudad) {
        this.nombreCiudad = nombreCiudad;
    }
    public String getNomConstructora() {
        return nomConstructora;
    }
    public void setNomConstructora(String nomConstructora) {
        this.nomConstructora = nomConstructora;
    }
    public String getNombreLider() {
        return nombreLider;
    }
    public void setNombreLider(String nombreLider) {
        this.nombreLider = nombreLider;
    }
    public Integer getCodigoTipo() {
        return codigoTipo;
    }
    public void setCodigoTipo(Integer codigoTipo) {
        this.codigoTipo = codigoTipo;
    }
    public Integer getEstrato() {
        return estrato;
    }
    public void setEstrato(Integer estrato) {
        this.estrato = estrato;
    }
    
}

// **************************************************
// class Requerimiento_3 {}
// **************************************************

public class Requerimiento_3 {
    
    // Atributos
    private String abrev;
    
    // Constructores
    public Requerimiento_3(){
    }
    
    public Requerimiento_3(String abrev){
        this.setAbrev(abrev);
    }
    
    // Generamos los getters y setters
    public String getAbrev(){
        return this.abrev;
    }
    public void setAbrev(String abrev){
        this.abrev = abrev;
    }

}

// **************************************************
// DAO
// class Requerimiento_1Dao {}
// **************************************************

public class RequerimientoDao_1 {

    public ArrayList<Requerimiento_1> requerimiento1() throws SQLException {

        // Creamos un objeto de tipo lista para cargar los datos de la consulta al Requerimiento_1
        ArrayList<Requerimiento_1> respuesta = new ArrayList<Requerimiento_1>();

        // Generamos la conexion de la clase JDBCUtilities a la base de datos
        Connection conexion = JDBCUtilities.getConnection();

        try {
            String consulta = "SELECT c.Fecha, c.ID_Compra, c.Proveedor, c.Pagado " +
                              "FROM Compra c " +
                              "ORDER BY c.ID_Compra DESC LIMIT 20";

            PreparedStatement statement = conexion.prepareStatement(consulta);

            // Se genera la consulta en la base de datos
            ResultSet resultSet = statement.executeQuery();

            // Recorremos los registros generados por la consulta
            while(resultSet.next()) {
                Requerimiento_1 requerimiento_1 = new Requerimiento_1();
                requerimiento_1.setFechaCompra(resultSet.getString("Fecha"));
                requerimiento_1.setCodCompra(resultSet.getInt("ID_Compra"));
                requerimiento_1.setNombreProveedor(resultSet.getString("Proveedor"));
                requerimiento_1.setPagado(resultSet.getString("Pagado"));

                // Adicionamos cada registro como un objeto del ArrayList que contiene la consulta
                respuesta.add(requerimiento_1);
            }

            resultSet.close();
            statement.close();

        } catch (SQLException e) {
            System.err.println("Error de consulta SQL Requerimiento_1 -> " + e);

        } finally {
            if(conexion != null) {
                conexion.close();
            }
        }

        return respuesta;
    }
    
}

// **************************************************
// class Requerimiento_2Dao {}
// **************************************************

public class RequerimientoDao_2 {

    public ArrayList<Requerimiento_2> requerimiento2() throws SQLException {

        // Creamos un objeto de tipo lista para cargar los datos de la consulta al Requerimiento_2
        ArrayList<Requerimiento_2> respuesta = new ArrayList<Requerimiento_2>();

        // Generamos la conexion de la clase JDBCUtilities a la base de datos
        Connection conexion = JDBCUtilities.getConnection();

        try {
            String consulta = "SELECT p.Fecha_Inicio, p.Ciudad, p.Constructora, " +
                              "l.Nombre || ' ' || l.Segundo_Apellido AS 'nombreLider', " +
                              "t.Codigo_Tipo, t.Estrato " +
                              "FROM Proyecto p INNER JOIN Lider l ON p.ID_Lider = l.ID_Lider " +
                              "INNER JOIN Tipo t ON p.ID_Tipo = t.ID_Tipo " + 
                              "WHERE p.Fecha_Inicio >= '2021-01-01' " +
                              "AND p.Fecha_Inicio <= '2021-05-30' " +
                              "AND p.Ciudad = 'Armenia' ";
                            

            PreparedStatement statement = conexion.prepareStatement(consulta);

            // Se genera la consulta en la base de datos
            ResultSet resultSet = statement.executeQuery();

            // Recorremos los registros generados por la consulta
            while (resultSet.next()) {
                Requerimiento_2 requerimiento_2 = new Requerimiento_2(
                        resultSet.getString("Fecha_Inicio"),
                        resultSet.getString("Ciudad"),
                        resultSet.getString("Constructora"),
                        resultSet.getString("nombreLider"),
                        resultSet.getInt("Codigo_Tipo"),
                        resultSet.getInt("Estrato")
                );

                // Adicionamos cada registro como un objeto del ArrayList que contiene la consulta
                respuesta.add(requerimiento_2);

            }
            
            resultSet.close();
            statement.close();

        } catch (SQLException e) {
            System.err.println("Error de consulta SQL Requerimiento_2 -> " + e);
            
        } finally {
            conexion.close();
        }

        return respuesta;
    }

}

// **************************************************
// class Requerimiento_3Dao {}
// **************************************************

public class RequerimientoDao_3 {
    
    public ArrayList<Requerimiento_3> requerimiento3() throws SQLException {
        
        // Creamos un objeto de tipo lista para cargar los datos de la consulta al Requerimiento_2
        ArrayList<Requerimiento_3> respuesta = new ArrayList<Requerimiento_3>();

        // Generamos la conexion de la clase JDBCUtilities a la base de datos
        Connection conexion = JDBCUtilities.getConnection();
        
        try {
            String consulta = "SELECT SUBSTR(l.Nombre,1,3) || SUBSTR(l.Primer_Apellido,1,3) || " +
                              "SUBSTR(l.Segundo_Apellido,1,3) AS 'Abrev' " +
                              "FROM Lider l";
            
            PreparedStatement statement = conexion.prepareStatement(consulta);

            // Se genera la consulta en la base de datos
            ResultSet rs = statement.executeQuery();
            
            // Recorremos los registros generados por la consulta
            while(rs.next()){
                Requerimiento_3 requerimiento_3 = new Requerimiento_3(
                        rs.getString("Abrev")
                );
                
                // Adicionamos cada registro como un objeto del ArrayList que contiene la consulta
                respuesta.add(requerimiento_3);

            }
            
            rs.close();
            statement.close();
            
        } catch(SQLException e){
            System.err.println("Error de consulta SQL Requerimiento_3 -> " + e);
            
        } finally {
            conexion.close();
        }
                
        return respuesta;
    }
    
}

// **************************************************
